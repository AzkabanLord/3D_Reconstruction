<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
   
  <arg name="rviz" default="true" />
  <arg name="laserscan_pointcloud" default="/velodyne_points"/>
  <arg name="voxel_size" default="0.5"/>

    <param name="scan_line" type="int" value="16" />

    <!-- if 1, do mapping 10 Hz, if 2, do mapping 5 Hz. Suggest to use 1, it will adjust frequence automaticlly -->
    <param name="mapping_skip_frame" type="int" value="1" />

    <!-- remove too closed points -->
    <param name="minimum_range" type="double" value="0.3"/>


    <param name="mapping_line_resolution" type="double" value="0.2"/>
    <param name="mapping_plane_resolution" type="double" value="0.4"/>

    <node pkg="aloam_velodyne" type="ascanRegistration" name="ascanRegistration" output="screen" />

    <node pkg="aloam_velodyne" type="alaserOdometry" name="alaserOdometry" output="screen" />

    <node pkg="aloam_velodyne" type="alaserMapping" name="alaserMapping" output="screen" />

  <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true">
    <remap from="pointcloud" to="$(arg laserscan_pointcloud)"/>
    <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
    <param name="truncation_distance" value="0.5" />
    <param name="color_mode" value="normals" />
    <param name="enable_icp" value="true" />
    <param name="icp_refine_roll_pitch" value="false" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="mesh_min_weight" value="2" />
    <param name="method" value="fast" />
    <param name="max_ray_length_m" value="10.0" />
    <param name="use_const_weight" value="true" />
    <param name="world_frame" value="world"/>
    <param name="verbose" value="true" />
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon basement).ply" />
  </node>

    <group if="$(arg rviz)">
        <node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find aloam_velodyne)/rviz_cfg/velodyne_voxblox.rviz" />
    </group>



</launch>
